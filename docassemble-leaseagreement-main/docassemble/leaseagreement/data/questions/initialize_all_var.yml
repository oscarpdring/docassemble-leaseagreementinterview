---
mandatory: True
code: |
 if not defined('user_approves'):
   need(lease_date)
   need(landlord_entity)
   need(tenant_entity)
   need(tenant_dba)
   need(broker_involved_yn)
   need(initial_rental_amount)
   initial_rental_amount = int(initial_rental_amount)
   
   logo_file = floor_plan if floor_plan else None
   if broker_involved_yn:
     need(broker_name)
     need(broker_commission)
     broker_commission_math = float((broker_commission) * (initial_rental_amount))
     broker_commission_decimal = f"${broker_commission_math:,.2f}"
     broker_short_form1 = "other than " + (broker_name) + "(\"Broker\")"
     broker_short_form2 = "other than the Broker"
     broker_short_form3 = "Landlord shall pay any commission due the Broker pursuant to a separate agreement between Landlord and the Broker. "
   else:
     broker_name = "None"
     broker_commission = 0
     broker_commission_decimal = 0
     broker_short_form1 = " "
     broker_short_form2 = " "
     broker_short_form3 = " "
   need(building_complete_address)
   need(unit_number)
   need(previous_tenant_yn)
   if previous_tenant_yn:
     need(previous_tenant_name)
   else:
     previous_tenant_name = "N/A"
     
   need(curfew_time_yn)
   if curfew_time_yn:
     need(curfew_time)
     curfew_statement = "Tenant shall not operate for business in the Premises during the hours from " +  (curfew_time)
   else:
     curfew_statement = "INTENTIONALLY OMITTED"
     
   need(landlord_work)
   need(lease_term_years)
   lease_term_years = int(lease_term_years)
   lease_term_years_words = number_to_words(lease_term_years)
   
   need(tenant_mailing_address)
   need(tenant_permitted_use)
   need(tenant_security_deposit_months_multiplier)

   #Tenant Security Deposit as a Decimal 
   
   security_deposit_total = tenant_security_deposit_months_multiplier * initial_rental_amount
   security_deposit_total_decimal = f"${security_deposit_total:,.2f}"
   initial_rental_amount_decimal = f"${initial_rental_amount:,.2f}"
 
   #Amount of months the security is for
 
   tenant_security_deposit_months_multiplier_decimal = f"{tenant_security_deposit_months_multiplier:,.0f}"
   tenant_security_deposit_months_multiplier_words = number_to_words(tenant_security_deposit_months_multiplier) 

   need(annual_increase_yn)
   if annual_increase_yn:
     need(annum_increase)
     rent_schedule_text = create_rent_schedule(
         lease_term_years=int(lease_term_years),
         initial_rental_amount=initial_rental_amount,
         rent_schedule_type="annual_increase",
         annum_increase=float(annum_increase)
     )
   else:
     need(custom_rent_schedule)
     annum_increase = 0
     rent_schedule_text = create_rent_schedule(
         lease_term_years=int(lease_term_years),
         initial_rental_amount=initial_rental_amount,
         rent_schedule_type="custom",
         custom_schedule=custom_rent_schedule
       )

   need(rent_concession)
   need(tax_year)
   tax_year = int(tax_year)
   need(tenant_proportional_share)
   tenant_proportional_share = int(tenant_proportional_share)
   tenant_proportional_share_words = number_to_words(tenant_proportional_share)
   need(lease_commencement_date)
   need(guarantors_name)
   guarantor_signatures = format_guarantor_signatures(guarantors_name)

   initial_rental_amount_words = number_to_words(initial_rental_amount)
   rent_concession_decimal = int(rent_concession)
   rent_concession_words = number_to_words(rent_concession)
   tax_year_next = (tax_year + 1)
   
   guarantor_bullet_list = format_guarantor_list(guarantors_name)
   guarantor_comma_list = format_comma_list(guarantors_name)

   expiration_year = (lease_commencement_date.year + lease_term_years)
   expiration_day = lease_commencement_date.day
   expiration_month = lease_commencement_date.month
   expiration_month_word = num_to_month(expiration_month)
   
   need(ncp_111_yn)
   need(food_and_beverage_yn)
   need(short_form_yn)
   
   docs_to_show = [final_document, good_guy]
   if ncp_111_yn:
     docs_to_show.append(ncp_doc)
   if food_and_beverage_yn:
     docs_to_show.append(fb_doc)
   if broker_involved_yn:
     docs_to_show.append(broker_doc)
   if short_form_yn:
     docs_to_show.append(short_form_lease_doc)
     
   all_fields_complete = True
---